<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html>
<html b:css='false' b:defaultwidgetversion='2' b:js='true' b:layoutsVersion='3' b:responsive='true' expr:dir='data:blog.languageDirection' expr:lang='data:blog.locale' xmlns='http://www.w3.org/1999/xhtml' xmlns:b='http://www.google.com/2005/gml/b' xmlns:data='http://www.google.com/2005/gml/data' xmlns:expr='http://www.google.com/2005/gml/expr'>
  <head>
    <meta content='width=device-width,initial-scale=1' name='viewport'/>
    <title><data:blog.pageTitle/></title>
    
    <!-- Google Fonts & Font Awesome CDN -->
    <link href='https://fonts.googleapis.com' rel='preconnect'/>
    <link crossorigin='anonymous' href='https://fonts.gstatic.com' rel='preconnect'/>
    <link href='https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;600&amp;family=Lobster&amp;family=Oswald:wght@400;600&amp;family=Poppins:wght@400;500;600&amp;display=swap' rel='stylesheet'/>
    <link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css' rel='stylesheet'/>
    
    <!-- QR Code Library CDN -->
    <script src='https://cdn.jsdelivr.net/npm/qrcodejs@1.0.0/qrcode.min.js'/>

    <!-- Meta Tags -->
    <b:include data='blog' name='all-head-content'/>
    
    <!--
    /******************************************************************
     * Easy Customization Zone: Edit all your content from here.
     ******************************************************************/
    -->
    <script id='theme-data'>
        const themeData = {
            siteTitle: &quot;Link In Bio&quot;,
            profile: {
                name: &quot;Alex Doe&quot;,
                image: &quot;https://i.imgur.com/8b3wf2A.png&quot;,
                bio: &quot;Web Developer, Blogger &amp; Content Creator. Welcome to my page!&quot;
            },
            mainLinks: [
                { name: &quot;YouTube&quot;, url: &quot;#&quot;, category: &quot;Social Media&quot; },
                { name: &quot;Facebook&quot;, url: &quot;#&quot;, category: &quot;Social Media&quot; },
                { name: &quot;Instagram&quot;, url: &quot;#&quot;, category: &quot;Social Media&quot; },
                { name: &quot;Twitter&quot;, url: &quot;#&quot;, category: &quot;Social Media&quot; },
                { name: &quot;LinkedIn&quot;, url: &quot;#&quot;, category: &quot;Professional&quot; },
                { name: &quot;GitHub&quot;, url: &quot;#&quot;, category: &quot;Development&quot; },
                { name: &quot;Dev.to&quot;, url: &quot;#&quot;, category: &quot;Development&quot; },
                { name: &quot;Medium&quot;, url: &quot;#&quot;, category: &quot;Writing&quot; },
                { name: &quot;Reddit&quot;, url: &quot;#&quot;, category: &quot;Social Media&quot; },
                { name: &quot;Discord&quot;, url: &quot;#&quot;, category: &quot;Gaming&quot; },
                { name: &quot;Pinterest&quot;, url: &quot;#&quot;, category: &quot;Design&quot; },
                { name: &quot;Telegram&quot;, url: &quot;#&quot;, category: &quot;Social Media&quot; },
                { name: &quot;Spotify&quot;, url: &quot;#&quot;, category: &quot;Music&quot; },
                { name: &quot;Patreon&quot;, url: &quot;#&quot;, category: &quot;Support Me&quot; },
                { name: &quot;Buy Me a Coffee&quot;, url: &quot;#&quot;, category: &quot;Support Me&quot; },
                { name: &quot;CodePen&quot;, url: &quot;#&quot;, category: &quot;Development&quot; }
            ],
            footer: {
                developerName: &quot;Hafez Md Salman Rahman&quot;,
                developerUrl: &quot;https://salmanrahman.netlify.app/&quot;,
                ownerName: &quot;&quot;,
                ownerUrl: &quot;#&quot;
            }
        };
    </script>
    
    <b:skin><![CDATA[
    /*
    --- BioLinker Soft UI ---
    * Name: ConnectMe
    * Version: 1.0 (Commercial Release)
    * Designer: Hafez Md Salman Rahman
    * Website: https://salmanrahman.netlify.app/
    * Description: A premium "Link in Bio" theme for Blogger with a Soft UI design.
    */
    /* CSS Variables for Soft UI */
    :root {
        --bg-primary: #e0e5ec; --shadow-dark: #a3b1c6; --shadow-light: #ffffff;
        --text-primary: #18181b; --text-secondary: #3a3a3a; --text-tertiary: #52525b; --text-placeholder: #6b7280;
        --active-blue: #007bff;
    }
    html.dark {
        --bg-primary: #2c2f34; --shadow-dark: #222529; --shadow-light: #36393f;
        --text-primary: #ffffff; --text-secondary: #e0e0e0; --text-tertiary: #8e9297; --text-placeholder: #72767d;
        --active-blue: #4a90e2;
    }
    
    /* Basic Styles */
    *, *::before, *::after { margin: 0; padding: 0; box-sizing: border-box; }
    body { font-family: 'Poppins', sans-serif; background-color: var(--bg-primary); color: var(--text-secondary); transition: background-color 0.3s; }
    
    /* Font Classes & Helpers */
    .font-lobster { font-family: 'Lobster', cursive; }
    .font-oswald { font-family: 'Oswald', sans-serif; }
    .container { max-width: 32rem; margin: 0 auto; padding: 1.5rem 1rem; }
    .hidden { display: none !important; }

    /* Header */
    .site-header { margin-bottom: 1.5rem; }
    .header-content {
        display: flex; justify-content: space-between; align-items: center; padding: 1rem 1.5rem;
        background-color: var(--bg-primary); border-radius: 1.25rem;
        box-shadow: 7px 7px 15px var(--shadow-dark), -7px -7px 15px var(--shadow-light);
    }
    #site-title { font-size: 1.5rem; font-weight: 400; color: var(--text-primary); }
    #theme-toggle {
        width: 44px; height: 44px; display: flex; align-items: center; justify-content: center;
        background: var(--bg-primary); border: none; cursor: pointer; font-size: 1.25rem; color: var(--text-primary);
        border-radius: 50%; box-shadow: 5px 5px 10px var(--shadow-dark), -5px -5px 10px var(--shadow-light);
        transition: all 0.2s ease-in-out;
    }
    #theme-toggle:hover { box-shadow: 2px 2px 5px var(--shadow-dark), -2px -2px 5px var(--shadow-light); }
    
    /* Profile Section */
    .profile-section { display: flex; flex-direction: column; align-items: center; text-align: center; }
    .profile-image-container { position: relative; margin-bottom: 1rem; }
    .profile-image { width: 7rem; height: 7rem; border-radius: 50%; object-fit: cover; border: 4px solid var(--bg-primary);
        box-shadow: 7px 7px 15px var(--shadow-dark), -7px -7px 15px var(--shadow-light); }
    .profile-image-container::after {
        content: ''; position: absolute; bottom: 8px; right: 8px; width: 1rem; height: 1rem; background-color: #2ecc71;
        border-radius: 50%; border: 2px solid var(--bg-primary); animation: pulse 2s infinite;
    }
    @keyframes pulse { 0% { box-shadow: 0 0 0 0 rgba(46, 204, 113, 0.7); } 70% { box-shadow: 0 0 0 10px rgba(46, 204, 113, 0); } 100% { box-shadow: 0 0 0 0 rgba(46, 204, 113, 0); } }
    #profile-name { font-family: 'Oswald', sans-serif; font-size: 1.75rem; color: var(--text-primary); margin-bottom: 0.25rem; }
    #profile-bio { font-size: 0.95rem; color: var(--text-tertiary); }

    /* Action Buttons (Share, QR) */
    .action-buttons { display: flex; justify-content: center; gap: 1rem; margin: 1.5rem 0; }
    .action-btn {
        display: flex; align-items: center; justify-content: center; width: 3.5rem; height: 3.5rem;
        border-radius: 50%; border: none; cursor: pointer; font-size: 1.25rem; color: var(--text-primary);
        background: var(--bg-primary); box-shadow: 7px 7px 15px var(--shadow-dark), -7px -7px 15px var(--shadow-light);
        transition: all 0.2s ease-in-out;
    }
    .action-btn:hover { box-shadow: 3px 3px 7px var(--shadow-dark), -3px -3px 7px var(--shadow-light); }
    
    /* Search & Filter */
    .search-container { position: relative; margin-bottom: 1.5rem; }
    .search-container .fa-search { position: absolute; left: 1.25rem; top: 50%; transform: translateY(-50%); color: var(--text-placeholder); }
    .search-input {
        font-family: 'Josefin Sans', sans-serif; width: 100%; padding: 1rem 1.25rem 1rem 3.5rem; border-radius: 50px;
        border: none; background-color: var(--bg-primary); color: var(--text-primary);
        box-shadow: inset 5px 5px 10px var(--shadow-dark), inset -5px -5px 10px var(--shadow-light);
        transition: all 0.2s ease-in-out; font-size: 1rem;
    }
    .search-input::placeholder { color: var(--text-placeholder); }
    .search-input:focus { outline: none; box-shadow: inset 2px 2px 5px var(--shadow-dark), inset -2px -2px 5px var(--shadow-light); }
    
    #filter-buttons { display: flex; flex-wrap: wrap; justify-content: center; align-items: center; gap: 1rem; margin-bottom: 2rem; }
    .filter-btn {
        font-family: 'Josefin Sans', sans-serif; letter-spacing: 0.5px; cursor: pointer; transition: all 0.2s ease-in-out;
        padding: 0.6rem 1.35rem; border-radius: 9999px; font-size: 0.875rem; font-weight: 600;
        color: var(--text-secondary); background: var(--bg-primary); border: none;
        box-shadow: 7px 7px 15px var(--shadow-dark), -7px -7px 15px var(--shadow-light);
    }
    .filter-btn:hover { box-shadow: 3px 3px 7px var(--shadow-dark), -3px -3px 7px var(--shadow-light); }
    .filter-btn.active { background-color: var(--active-blue); color: white; box-shadow: inset 3px 3px 7px rgba(0,0,0,0.2), inset -3px -3px 7px rgba(255,255,255,0.2); pointer-events: none; }
    
    /* Links Container */
    #links-container { display: flex; flex-direction: column; gap: 1rem; }
    .link-item {
        display: flex; align-items: center; padding: 1rem; text-decoration: none; background-color: var(--bg-primary);
        border-radius: 1rem; box-shadow: 7px 7px 15px var(--shadow-dark), -7px -7px 15px var(--shadow-light); transition: all 0.25s ease-out;
    }
    .link-item:hover { box-shadow: 3px 3px 7px var(--shadow-dark), -3px -3px 7px var(--shadow-light); }
    .link-item .link-icon { width: 2rem; text-align: center; font-size: 1.5rem; color: var(--text-primary); transition: color 0.2s ease-out; }
    .link-item .link-name { flex-grow: 1; margin-left: 0.75rem; font-size: 1.125rem; font-weight: 600; color: var(--text-primary); letter-spacing: 0.5px; transition: color 0.2s ease-out; }
    .link-item:hover .link-name, .link-item:hover .link-icon { color: var(--active-blue); }
    .link-item .link-stats { display: flex; align-items: center; gap: 0.5rem; color: var(--text-placeholder); font-size: 0.75rem; }
    .link-item .link-stats .fa-arrow-up-right-from-square { margin-left: 0.75rem; font-size: 0.875rem; }
    
    /* Footer */
    .site-footer { font-family: 'Josefin Sans', sans-serif; letter-spacing: 0.5px; margin-top: 2.5rem; padding-bottom: 1.5rem; }
    .footer-content { display: flex; flex-direction: column; align-items: center; gap: 0.5rem; font-size: 0.875rem; color: var(--text-placeholder); }
    .footer-link { display: inline-flex; align-items: center; text-decoration: none; color: var(--text-tertiary); font-weight: 500; transition: color 0.2s ease-in-out; }
    .footer-link:hover { text-decoration: underline; color: var(--active-blue); }
    .verified-badge { display: inline-block; vertical-align: middle; width: 17px; height: 17px; background-color: #1877F2; -webkit-mask: url("data:image/svg+xml,%3Csvg fill='currentColor' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z'/%3E%3C/svg%3E") no-repeat center; mask: url("data:image/svg+xml,%3Csvg fill='currentColor' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z'/%3E%3C/svg%3E") no-repeat center; background-size: contain; margin-left: 5px; }
    html.dark .verified-badge { background-color: #1DA1F2; }
    
    /* QR Code Modal */
    .qr-modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.6); display: flex; align-items: center; justify-content: center; z-index: 100; backdrop-filter: blur(5px); }
    .qr-modal-content { padding: 2rem; background-color: var(--bg-primary); border-radius: 1rem; box-shadow: 7px 7px 15px var(--shadow-dark), -7px -7px 15px var(--shadow-light); position: relative; text-align: center; }
    .qr-modal-close { position: absolute; top: 0.5rem; right: 0.75rem; font-size: 2rem; color: var(--text-tertiary); cursor: pointer; border: none; background: none; }
    #qrcode { margin-top: 1rem; background: #fff; padding: 10px; border-radius: 5px; }
    #qrcode img { margin: auto; }

    /* Responsive Styles */
    @media (max-width: 480px) {
        body { padding: 0; } .container { padding: 1rem; }
        .site-header { border-radius: 0; }
        .site-header h1 { font-size: 1.25rem; }
    }
    ]]></b:skin>
 
    <b:template-skin><![CDATA[]]></b:template-skin>
    <b:defaultmarkups><b:defaultmarkup type='Common'/></b:defaultmarkups>
  </head>
<body>
    <div class='container'>
      <header class='site-header'>
          <div class='header-content'>
              <h1 class='font-lobster' id='site-title'/>
              <button aria-label='Toggle color theme' id='theme-toggle'>
                  <i class='fa-solid fa-moon hidden' id='theme-toggle-dark-icon'/>
                  <i class='fa-solid fa-sun hidden' id='theme-toggle-light-icon'/>
              </button>
          </div>
      </header>
      
      <main>
          <!-- Profile Section -->
          <div class='profile-section'>
              <div class='profile-image-container'>
                  <img alt='Profile Picture' class='profile-image' id='profile-image' src=''/>
              </div>
              <h2 class='font-oswald' id='profile-name'/>
              <p id='profile-bio'/>
          </div>
          
          <!-- Action Buttons -->
          <div class='action-buttons'>
              <button aria-label='Share this page' class='action-btn' id='share-btn'><i class='fas fa-share-alt'/></button>
              <button aria-label='Show QR Code' class='action-btn' id='qr-btn'><i class='fas fa-qrcode'/></button>
          </div>

          <!-- Search & Filter -->
          <div class='search-container'>
              <label class='hidden' for='search-input'>Search links</label>
              <i class='fa-solid fa-search'/>
              <input class='search-input' id='search-input' placeholder='' type='text'/>
          </div>
          <div id='filter-buttons'/>
          
          <!-- Main Links Section -->
          <div id='links-container'/>
      </main>
    </div>

    <footer class='site-footer'>
        <div class='footer-content'>
            <p class='hidden' id='owner-credit'/>
            <p id='developer-credit'/>
            <p id='copyright-notice'/>
        </div>
    </footer>

    <!-- QR Code Modal -->
    <div class='qr-modal-overlay hidden' id='qr-modal'>
        <div class='qr-modal-content'>
            <button aria-label='Close' class='qr-modal-close' id='qr-modal-close'>&#215;</button>
            <h3 class='font-oswald'>Scan to visit this page</h3>
            <div id='qrcode'/>
        </div>
    </div>
    
    <!-- Blogger Sections (Hidden) - DO NOT DELETE -->
    <div style='display:none'>
        <b:section class='hidden-section' id='main' showaddelement='false'/>
    </div>

    <script>/*<![CDATA[*/
        function initializeTheme() {
            // --- DATA SOURCE (from script#theme-data) ---
            const links = themeData.mainLinks;
            
            // --- DOM ELEMENTS & STATE ---
            const linksContainer = document.getElementById('links-container');
            const filterButtonsContainer = document.getElementById('filter-buttons');
            const searchInput = document.getElementById('search-input');
            const themeToggleBtn = document.getElementById('theme-toggle');
            const shareBtn = document.getElementById('share-btn');
            const qrBtn = document.getElementById('qr-btn');
            const qrModal = document.getElementById('qr-modal');
            const qrModalClose = document.getElementById('qr-modal-close');
            const qrcodeContainer = document.getElementById('qrcode');
            
            let currentFilter = 'All', currentSearchTerm = '';
            let clickCounts = JSON.parse(localStorage.getItem('linkClickCounts')) || {};
            let qrCodeInstance = null;
            
            // --- FUNCTIONS ---
            function populateHeader() { document.getElementById('site-title').textContent = themeData.siteTitle; }
            function populateProfile() {
                document.getElementById('profile-image').src = themeData.profile.image;
                document.getElementById('profile-name').textContent = themeData.profile.name;
                document.getElementById('profile-bio').textContent = themeData.profile.bio;
            }
            function populateFooter() {
                const ownerCredit = document.getElementById('owner-credit');
                if (themeData.footer.ownerName && themeData.footer.ownerName.trim() !== '') {
                    ownerCredit.innerHTML = `
                        Owned By: 
                        <a href="${themeData.footer.ownerUrl}" target="_blank" rel="noopener noreferrer" class="footer-link">
                            <span>${themeData.footer.ownerName}</span>
                            <span class="verified-badge"></span>
                        </a>`;
                    ownerCredit.classList.remove('hidden');
                }
                const devCredit = document.getElementById('developer-credit');
                devCredit.innerHTML = `
                    Developed By: 
                    <a href="https://salmanrahman.netlify.app/" target="_blank" rel="noopener noreferrer" class="footer-link">
                        <span>Hafez Md Salman Rahman</span>
                    </a>`;
                document.getElementById('copyright-notice').textContent = `© ${new Date().getFullYear()} All Rights Reserved.`;
            }
            
            function getIconForLink(name) {
                const lowerName = name.toLowerCase();
                const iconMap = { youtube: 'fab fa-youtube', facebook: 'fab fa-facebook-f', instagram: 'fab fa-instagram', twitter: 'fab fa-twitter', 'x.com': 'fab fa-twitter', linkedin: 'fab fa-linkedin-in', github: 'fab fa-github', codepen: 'fab fa-codepen', coffee: 'fa-solid fa-mug-saucer', patreon: 'fab fa-patreon', spotify: 'fab fa-spotify', telegram: 'fab fa-telegram', pinterest: 'fab fa-pinterest', discord: 'fab fa-discord', reddit: 'fab fa-reddit-alien', medium: 'fab fa-medium', dev: 'fab fa-dev', portfolio: 'fa-solid fa-briefcase', blog: 'fa-solid fa-newspaper', project: 'fa-solid fa-code-branch', shop: 'fa-solid fa-store', contact: 'fa-solid fa-envelope' };
                for (const key in iconMap) { if (lowerName.includes(key)) return iconMap[key]; }
                return 'fa-solid fa-link';
            }
            
            function renderLinks() {
                const linksToRender = links.map(link => ({...link, id: link.name.toLowerCase().replace(/\s+/g, '-'), icon: getIconForLink(link.name)}));
                let filteredLinks = (currentFilter === 'All') ? [...linksToRender] : linksToRender.filter(l => l.category === currentFilter);
                if (currentSearchTerm) { filteredLinks = filteredLinks.filter(l => l.name.toLowerCase().includes(currentSearchTerm)); }
                if (filteredLinks.length === 0) { linksContainer.innerHTML = `<p style="text-align: center; color: var(--text-placeholder);">No links found.</p>`; return; }
                linksContainer.innerHTML = filteredLinks.map(link => {
                    const count = clickCounts[link.id] || 0;
                    return `
                        <a href="${link.url}" target="_blank" rel="noopener noreferrer" data-link-id="${link.id}" class="link-item">
                            <i class="${link.icon} link-icon"></i><span class="link-name font-oswald">${link.name}</span>
                            <div class="link-stats"><i class="fa-solid fa-eye"></i><span id="count-${link.id}">${count}</span><i class="fa-solid fa-arrow-up-right-from-square"></i></div>
                        </a>`;
                }).join('');
            }

            function createFilterButtons() {
                if (links.length === 0) return;
                const categories = ['All', ...new Set(links.map(link => link.category))];
                filterButtonsContainer.innerHTML = categories.map(category => `<button class="filter-btn ${category === 'All' ? 'active' : ''}" data-category="${category}">${category}</button>`).join('');
            }
            
            function handleThemeToggle() {
                const darkIcon = document.getElementById('theme-toggle-dark-icon');
                const lightIcon = document.getElementById('theme-toggle-light-icon');
                if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
                    document.documentElement.classList.add('dark');
                    lightIcon.classList.remove('hidden');
                } else {
                    document.documentElement.classList.remove('dark');
                    darkIcon.classList.remove('hidden');
                }
                themeToggleBtn.addEventListener('click', () => {
                    darkIcon.classList.toggle('hidden'); lightIcon.classList.toggle('hidden');
                    const isDark = document.documentElement.classList.toggle('dark');
                    localStorage.setItem('color-theme', isDark ? 'dark' : 'light');
                });
            }

            function shuffleArray(array) {
                for (let i = array.length - 1; i > 0; i--) { const j = Math.floor(Math.random() * (i + 1)); [array[i], array[j]] = [array[j], array[i]]; }
                return array;
            }

            const placeholderTexts = shuffleArray(links.map(link => link.name));
            let textIndex = 0, charIndex = 0, isTyping = true, typingTimeout;
            
            function typeAnimation() {
                if (document.activeElement === searchInput || !placeholderTexts.length) { searchInput.placeholder = 'Search links...'; return; }
                const currentText = "Search for " + placeholderTexts[textIndex] + "...";
                const displayedText = currentText.substring(0, charIndex);
                searchInput.placeholder = displayedText + "|";
                if (isTyping) {
                    charIndex++;
                    if (charIndex > currentText.length) { isTyping = false; typingTimeout = setTimeout(typeAnimation, 2000); } 
                    else { typingTimeout = setTimeout(typeAnimation, 120); }
                } else {
                    charIndex--;
                    if (charIndex < 0) { isTyping = true; charIndex = 0; textIndex = (textIndex + 1) % placeholderTexts.length; typingTimeout = setTimeout(typeAnimation, 500); } 
                    else { typingTimeout = setTimeout(typeAnimation, 80); }
                }
            }
            
            // --- EVENT LISTENERS ---
            filterButtonsContainer.addEventListener('click', (e) => {
                if (e.target.tagName === 'BUTTON') {
                    filterButtonsContainer.querySelectorAll('.filter-btn').forEach(btn => btn.classList.remove('active'));
                    e.target.classList.add('active'); currentFilter = e.target.dataset.category; renderLinks();
                }
            });

            searchInput.addEventListener('input', (e) => { currentSearchTerm = e.target.value.toLowerCase().trim(); renderLinks(); });
            searchInput.addEventListener('focus', () => { clearTimeout(typingTimeout); searchInput.placeholder = 'Search links...'; });
            searchInput.addEventListener('blur', () => { if (searchInput.value === '') typeAnimation(); });

            document.getElementById('links-container').addEventListener('click', (e) => {
                const linkElement = e.target.closest('.link-item');
                if (linkElement) {
                    const linkId = linkElement.dataset.linkId;
                    clickCounts[linkId] = (clickCounts[linkId] || 0) + 1;
                    localStorage.setItem('linkClickCounts', JSON.stringify(clickCounts));
                    const countSpan = document.getElementById(`count-${linkId}`);
                    if(countSpan) countSpan.textContent = clickCounts[linkId];
                }
            });

            shareBtn.addEventListener('click', async () => {
                try {
                    if (navigator.share) {
                        await navigator.share({ title: document.title, text: 'Check out all my links!', url: window.location.href });
                    } else { throw new Error('Web Share API not supported'); }
                } catch (err) {
                    navigator.clipboard.writeText(window.location.href).then(() => alert('Link copied to clipboard!'));
                }
            });

            qrBtn.addEventListener('click', () => {
                qrModal.classList.remove('hidden');
                if (!qrCodeInstance) {
                    qrCodeInstance = new QRCode(qrcodeContainer, { text: window.location.href, width: 150, height: 150 });
                }
            });
            qrModalClose.addEventListener('click', () => qrModal.classList.add('hidden'));
            qrModal.addEventListener('click', (e) => { if(e.target === qrModal) qrModal.classList.add('hidden'); });

            // --- INITIALIZATION ---
            populateHeader();
            populateProfile();
            populateFooter();
            handleThemeToggle();
            createFilterButtons();
            renderLinks();
            typeAnimation();
        }
        
        // This ensures the script runs after the page is fully loaded
        window.onload = initializeTheme;
    /*]]>*/</script>

    <!-- This section is required for Blogger to function properly. -->
    <b:section id='main-section' showaddelement='false'/>
</body>
</html>
